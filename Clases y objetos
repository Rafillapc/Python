class Dino:
    _encendido = True

    def enciende(self):
        self._encendido=True

    def apaga(self):
        self._encendido=False

    def isEncendido(self):
        return self._encendido

d = Dino()  #Para yo utilizar un m√©todo dentro de una clase tengo que instanciar la clase creando un objeto
d.apaga()
print(d.isEncendido())

d2=Dino()
d2.enciende()
print(d2.isEncendido())

print(d.isEncendido())



---------------------------------------------------------------------------------------------------------------------------------------

#HERENCIA


class Juguete:
    _encendido = True

    def enciende(self):
        print("Enciendo el aparato")
        self._encendido=True

    def apaga(self):
        print("Apago el aparato")
        self._encendido=False

    def isEncendido(self):
        return self._encendido

class Potato(Juguete):
    def quitarOreja(self):
        pass

    def ponerOreja(self):
        pass


class Dino(Juguete):
    color = None
    nombre = None

    def __init__(self, nombre): #Esta palabra reservada sirve para declarar el constructor
        super().__init__() #super determina cual es mi clase padre, y con innit llamo al constructor de ella
        print("Estoy en el constructor de la clase dino")

    def verEscamas(self):
        pass

p=Dino("Dinosaurio")



----------------------------------------------------------------------------------------------------------------------------------------------------------

#ABSTRACCION

from abc import ABC, abstractmethod

class Animal(ABC):
    @abstractmethod
    def sonido(self):
        pass

    def diHola(self):
        print("Hola")

class Perro(Animal):
    def sonido(self):
        print("guau")

class Gato(Animal):
    def sonido(self):
        print("marramiau")


p=Perro()
p.sonido()
p.diHola()

g=Gato()
g.sonido()
g.diHola()



---------------------------------------------------------------------------------------------------------------------------------------------------------------
#COMPOSICION

class Motor:
    tipo = "diesel"


class Ventanas:
    cantidad = 5


class Ruedas:
    cantidad = 4

class Carroceria:
    ventanas = Ventanas()
    ruedas = Ruedas()


class Coche:
    motor = Motor()
    carroceria = Carroceria()

c = Coche()
print("Motor es", c.motor.tipo)
print("Ventanas:"
